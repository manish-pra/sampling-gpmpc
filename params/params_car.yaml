env:
  start: [0.0, 1.95, 0.0, 0.0] # x,y,theta,v
  goal_state: [70, 1.95, 0.0, 0.0]
  dynamics: 'bicycle' # "pendulum"
  params: 
    lf: 1.105 #0.55 #1.105, 0.275
    lr: 1.738 #0.85 #1.738, 0.425
  prior_dyn_meas: True 
  train_data_has_derivatives: False
  n_data_x: 3
  n_data_u: 5
  ellipses: 
    n1 : [24, 4.5, 9.0, 1.0, 0.81]  # x0, y0, a, b, f equation of ellipse: (x-x0)^2/a^2 + (y-y0)^2/b^2 = f
    n2 : [10, 1.5, 9.0, 1.0, 0.81]
    n3 : [38, 1.5, 9.0, 1.0, 0.81]
    n4 : [52, 4.5, 9.0, 1.0, 0.81]

agent:
  g_dim :
    ny : 3
    nx : 2
    nu : 1
  dim :
    ny : 3
    nx : 4
    nu : 2
  Dyn_gp_lengthscale :
    # both : [[[2.1266, 5.6651, 10.5719]], [[2.2651, 4.6306, 7.6728]], [[20.9180, 6.1829, 3.7340]]]
    both : [[[ 2.2214, 14.7430,  1.9998]], [[ 2.0991, 23.9026,  1.5268]], [[48.1437, 24.5733,  1.7119]]]
  Dyn_gp_noise : 7.0e-9
  Dyn_gp_outputscale : 
    y1 : 0.1040 #0.3040 #0.75  #0.65
    y2 : 0.1071 #0.3071 #0.65 #0.455, noise multiplier 3.0e-7 results in smooth trajectories
    both : [2.1163, 0.9669, 0.2752] #[0.223, 0.0847, 0.0082]  #[0.123, 0.0447, 0.0042]
  Dyn_gp_task_noises : 
    val : [1.4, 0.48, 1.47, 0.515]
    multiplier : 1.0e-3                     #1.0e-5 Low noise value make it crazy fast
  Dyn_gp_beta : 3.0 # 1.5
  mean_shift_val : 2
  cov_module: 'Matern'     #'Matern', Sq_exp
  num_dyn_samples: 20     
  mean_as_dyn_sample: False
  true_dyn_as_sample: False        # This is for debugging, set num_dyn_samples to 1

visu:
  show: False
  show_current_loc: False

common:
  use_cuda : True
  num_MPC_itrs : 130

optimizer:
  H : 15 # horizon
  u_min : [-0.6, -2] # Minimum control input
  u_max : [0.6, 2] 
  # u_min : [-30, -30] # Minimum control input
  # u_max : [30, 30] 
  x_min : [-2.14, 0, -1.14, -1] # Minimum state value
  x_max : [ 70, 6.0, 1.14, 15] # x,y,v,theta,theta_dot
  linear_solver : 'ma57' #
  oracle:
    max_sqp_iter: 10
    tol_nlp: 1.0e-6
  SEMPC:
    max_sqp_iter: 2
    tol_nlp: 1.0e-4 
  Tf: 1  # sampling time = Tf/H
  order: 2
  dt: 0.06 # 0.010
  w: 40
  Qx: [2, 32, 0.07, 0.005] # n=40 [2, 32, 0.1, 0.05], n=20 [2, 32, 0.07, 0.005]
  Qu: [2, 2]
  cost: "expected"

experiment:
  name: "DEMPC" #
  generate_regret_plot : True
  folder: "car"
  rnd_seed: 
    use: True
    value: 123456