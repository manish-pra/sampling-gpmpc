env:
  start: [0.0, 1.95, 0.0, 14.0] # x,y,theta,v
  goal_state: [70.0, 1.95, 0.0, 0.0]
  dynamics: 'bicycle_Bdx' # "pendulum"
  params: 
    lf: 1.105 #0.55 #1.105, 0.275
    lr: 1.738 #0.85 #1.738, 0.425
    l_mu: [0.05, 0.05, 0.05, 0.05]
    l_sigma: [0.05, 0.05, 0.05, 0.05]
  prior_dyn_meas: True 
  train_data_has_derivatives: False
  use_model_without_derivatives: False
  n_data_x: 5
  n_data_u: 9
  # ellipses:
    # n1 : [26, 5.0, 9.0, 1.0, 5.67]  # x0, y0, a^2, b^2, f equation of ellipse: (x-x0)^2/a^2 + (y-y0)^2/b^2 = f
    # n1 : [15, 1.0, 9.0, 1.0, 5.67]
    # n1 : [20, 1.0, 6.0, 9.0, 12.67]
    # n3 : [42, 1.0, 9.0, 1.0, 5.67]
    # n4 : [58, 5.0, 9.0, 1.0, 5.67]
    # n1 : [24, 4.5, 9.0, 1.0, 5.67]  # x0, y0, a, b, f equation of ellipse: (x-x0)^2/a^2 + (y-y0)^2/b^2 = f
    # n2 : [10, 1.5, 9.0, 1.0, 5.67]
    # n3 : [38, 1.5, 9.0, 1.0, 5.67]
    # n4 : [52, 4.5, 9.0, 1.0, 5.67]

agent:
  g_dim :
    ny : 3
    nx : 1
    nu : 1
  dim :
    ny : 3
    nx : 4
    nu : 2
  Dyn_gp_lengthscale :
    both : [[[2.0, 1.1508]], [[1.7, 1.15]], [[5.22931,  1.9544]]]
  Dyn_gp_noise : 1.0e-7 # zero noise (modulo GP jitter below)
  Dyn_gp_outputscale : 
    y1 : 0.1040 #0.3040 #0.75  #0.65
    y2 : 0.1071 #0.3071 #0.65 #0.455, noise multiplier 3.0e-7 results in smooth trajectories
    both : [0.055, 0.075, 0.01] #[0.0357, 0.1621, 0.0054] #[0.223, 0.0847, 0.0082]  #[0.123, 0.0447, 0.0042]
  Dyn_gp_task_noises : 
    val : [1.0, 1.48, 0.515]
    multiplier : 1.0e-7 #1.0e-8                    #1.0e-5 Low noise value make it crazy fast
  Dyn_gp_beta : 3.0 # 1.5
  mean_shift_val : 2
  cov_module: 'Matern'     #'Matern', Sq_exp
  num_dyn_samples: 1     
  mean_as_dyn_sample: False
  true_dyn_as_sample: True        # This is for debugging, set num_dyn_samples to 1
  Dyn_gp_jitter: 1.0e-20
  Dyn_gp_variance_is_zero: -1.0 # -1 : deactivated
  Dyn_gp_min_data_dist: -1.0 # -1 : deactivated
  tight:
    use: False
    dyn_eps: 0.0008 #0.0008 #0.0003 #0.0009 # GT: 0.0002, 5.7e7: 0.00015
    # 0.000365, 0.0004 , 0.000135
    # 0.00074, 0.0008, 0.00033
    # 0.00105, 0.00115, 0.0006
    Lipschitz: 1.0016 #1.0304 #1.0344 #1.021 #1.0344 #1.0019 #1.0884 #1.0061 #1.00001
    w_bound: 0.000001
  shift_soln: False
  feedback: 
    use: True
    v_min : [-1000, -1000] # Minimum control input
    v_max : [1000, 1000] 
  input_generation: True

visu:
  show: False

common:
  use_cuda : True
  num_MPC_itrs : 1
  dynamics_rejection: False

optimizer:
  H : 50 # horizon
  u_min : [-0.6, -2] # Minimum control input
  u_max : [0.6, 2] 
  x_min : [-2.14, -2.0, -1.0, 9] # Minimum state value
  x_max : [ 70, 16.0, 1.0, 16] # x,y,v,theta,theta_dot
  linear_solver : 'ma57' #
  oracle:
    max_sqp_iter: 10
    tol_nlp: 1.0e-6
  SEMPC:
    max_sqp_iter: 150
    tol_nlp: 1.0e-4 
  order: 2
  dt: 0.06 # 0.010
  w: 40
  Qx: [2, 10, 0.07, 0.5]
  Qu: [0.5, 0.2]
  # Qu: [5, 0.5]
  cost: "expected"
  options: {
    levenberg_marquardt: 30.0
  }
  terminal_tightening:
    x_tight: [0.1, 0.1, 0.2, 0.1] #
    u_tight: [0.1, 0.1]
    # Vrange l = 1.0016, rho 0.992
    P: [[ 4.50618781e-01,  2.10101725e-05, -3.75707034e-03,
         5.38117374e-01],
       [ 2.10101725e-05,  4.28592943e-01,  2.64200457e-01,
        -1.65581498e-02],
       [-3.75707034e-03,  2.64200457e-01,  4.90922812e+00,
         1.45000289e-02],
       [ 5.38117374e-01, -1.65581498e-02,  1.45000289e-02,
         1.20198534e+00]]
    K: [[-2.96060719e-03, -8.05127934e-02, -1.34526882e+00,
        -8.17447260e-04],
       [-9.35534702e-01,  2.97777988e-02, -3.23316428e-03,
        -2.19242872e+00]]

experiment:
  name: "DEMPC" #
  generate_regret_plot : True
  folder: "car"
  rnd_seed: 
    use: True
    value: 123456
